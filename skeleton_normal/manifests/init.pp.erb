# == Class: <%= metadata.name %>
#
# Full description of class <%= metadata.name %> here.
#
# === Parameters
#
# [*sample_parameter*]
#   Explanation of what this parameter affects and what it defaults to.
#
class <%= metadata.name %> (
  ## Packages
  $package_name	= $<%= metadata.name %>::params::<%= metadata.name %>_package_name,
  
  ## Services
  $service_name	= $<%= metadata.name %>::params::<%= metadata.name %>_service_name,
  
  ## Dirs
  $config_dir		= $<%= metadata.name %>::params::<%= metadata.name %>_config_dir,
  $service_dir		= $<%= metadata.name %>::params::<%= metadata.name %>_service_dir,
  $home_dir					= $<%= metadata.name %>::params::<%= metadata.name %>_home_dir,
  
  ## Conf Files
  $config_file	= $<%= metadata.name %>::params::<%= metadata.name %>_config_file,
  $service_file	= $<%= metadata.name %>::params::<%= metadata.name %>_service_file,
  
  ## settings
  $override_settings      = undef,
  $default_settings			= $<%= metadata.name %>::params::<%= metadata.name %>_default_settings,
) inherits <%= metadata.name %>::params {

  # validate parameters here
  validate_hash($default_settings)
  validate_string($package_name)
  
  # check to see if override hash is a hash
  if !($override_settings == undef){
    validate_hash($override_settings)
  }
  # Merge settings with override-hash even if it's empty
  $settings = deep_merge($default_settings, $override_settings)

  class { '<%= metadata.name %>::install': } ->
  class { '<%= metadata.name %>::config': } ~>
  class { '<%= metadata.name %>::service': } ->
  Class['<%= metadata.name %>']
}
